(function () {

var workerCode = atob('CnZhciBnbG9iYWwgPSB0aGlzOwoKLyogQ291bGQgcG9zc2libHkgY3JlYXRlIHNvbWUgaGVscGVyIGZ1bmN0aW9ucyBoZXJlIHNvIHRoZXkgYXJlIGFsd2F5cyBhdmFpbGFibGUgd2hlbiBleGVjdXRpbmcgY29kZSBpbiBjaGF0PyovCgovKiBNb3N0IGV4dHJhIGZ1bmN0aW9ucyBjb3VsZCBiZSBwb3NzaWJseSB1bnNhZmUgKi8KCnZhciB3bCA9IHsKICAgICJzZWxmIjogMSwKICAgICJvbm1lc3NhZ2UiOiAxLAogICAgInBvc3RNZXNzYWdlIjogMSwKICAgICJnbG9iYWwiOiAxLAogICAgIndsIjogMSwKICAgICJldmFsIjogMSwKICAgICJBcnJheSI6IDEsCiAgICAiQm9vbGVhbiI6IDEsCiAgICAiRGF0ZSI6IDEsCiAgICAiRnVuY3Rpb24iOiAxLAogICAgIk51bWJlciIgOiAxLAogICAgIk9iamVjdCI6IDEsCiAgICAiUmVnRXhwIjogMSwKICAgICJTdHJpbmciOiAxLAogICAgIkVycm9yIjogMSwKICAgICJFdmFsRXJyb3IiOiAxLAogICAgIlJhbmdlRXJyb3IiOiAxLAogICAgIlJlZmVyZW5jZUVycm9yIjogMSwKICAgICJTeW50YXhFcnJvciI6IDEsCiAgICAiVHlwZUVycm9yIjogMSwKICAgICJVUklFcnJvciI6IDEsCiAgICAiZGVjb2RlVVJJIjogMSwKICAgICJkZWNvZGVVUklDb21wb25lbnQiOiAxLAogICAgImVuY29kZVVSSSI6IDEsCiAgICAiZW5jb2RlVVJJQ29tcG9uZW50IjogMSwKICAgICJpc0Zpbml0ZSI6IDEsCiAgICAiaXNOYU4iOiAxLAogICAgInBhcnNlRmxvYXQiOiAxLAogICAgInBhcnNlSW50IjogMSwKICAgICJJbmZpbml0eSI6IDEsCiAgICAiSlNPTiI6IDEsCiAgICAiTWF0aCI6IDEsCiAgICAiTmFOIjogMSwKICAgICJ1bmRlZmluZWQiOiAxCn07CgpPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyggZ2xvYmFsICkuZm9yRWFjaCggZnVuY3Rpb24oIHByb3AgKSB7CiAgICBpZiggIXdsLmhhc093blByb3BlcnR5KCBwcm9wICkgKSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KCBnbG9iYWwsIHByb3AsIHsKICAgICAgICAgICAgZ2V0IDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICB0aHJvdyAiU2VjdXJpdHkgRXhjZXB0aW9uOiBjYW5ub3QgYWNjZXNzICIrcHJvcDsKICAgICAgICAgICAgICAgIHJldHVybiAxOwogICAgICAgICAgICB9LCAKICAgICAgICAgICAgY29uZmlndXJhYmxlIDogZmFsc2UKICAgICAgICB9KTsgICAgCiAgICB9Cn0pOwoKT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoIGdsb2JhbC5fX3Byb3RvX18gKS5mb3JFYWNoKCBmdW5jdGlvbiggcHJvcCApIHsKICAgIGlmKCAhd2wuaGFzT3duUHJvcGVydHkoIHByb3AgKSApIHsKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoIGdsb2JhbC5fX3Byb3RvX18sIHByb3AsIHsKICAgICAgICAgICAgZ2V0IDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICB0aHJvdyAiU2VjdXJpdHkgRXhjZXB0aW9uOiBjYW5ub3QgYWNjZXNzICIrcHJvcDsKICAgICAgICAgICAgICAgIHJldHVybiAxOwogICAgICAgICAgICB9LCAKICAgICAgICAgICAgY29uZmlndXJhYmxlIDogZmFsc2UKICAgICAgICB9KTsgICAgCiAgICB9Cn0pOwoKKGZ1bmN0aW9uKCl7CiAgICB2YXIgY3ZhbHVlcyA9IFtdOwogICAgCiAgICB2YXIgY29uc29sZSA9IHsKICAgICAgICBsb2c6IGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIGN2YWx1ZXMgPSBjdmFsdWVzLmNvbmNhdCggW10uc2xpY2UuY2FsbCggYXJndW1lbnRzICkgKTsKICAgICAgICB9CiAgICB9OwoKICAgIGZ1bmN0aW9uIG9ialRvUmVzdWx0KCBvYmogKSB7CiAgICAgICAgdmFyIHJlc3VsdCA9IG9iajsKICAgICAgICBzd2l0Y2goIHR5cGVvZiByZXN1bHQgKSB7CiAgICAgICAgICAgIGNhc2UgInN0cmluZyI6CiAgICAgICAgICAgICAgICByZXR1cm4gJyInICsgcmVzdWx0ICsgJyInOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgIm51bWJlciI6CiAgICAgICAgICAgIGNhc2UgImJvb2xlYW4iOgogICAgICAgICAgICBjYXNlICJ1bmRlZmluZWQiOgogICAgICAgICAgICBjYXNlICJudWxsIjoKICAgICAgICAgICAgY2FzZSAiZnVuY3Rpb24iOgogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCArICIiOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgIm9iamVjdCI6CiAgICAgICAgICAgICAgICBpZiggIXJlc3VsdCApIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gIm51bGwiOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHR5cGUgPSAoe30pLnRvU3RyaW5nLmNhbGwoIHJlc3VsdCApOwogICAgICAgICAgICAgICAgICAgIHJldHVybiB0eXBlICsgIiAiICsgSlNPTi5zdHJpbmdpZnkocmVzdWx0KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICB9CiAgICAgICAgCiAgICB9CgogICAgb25tZXNzYWdlID0gZnVuY3Rpb24oIGV2ZW50ICkgewogICAgICAgICJ1c2Ugc3RyaWN0IjsKICAgICAgICB2YXIgY29kZSA9IGV2ZW50LmRhdGEuY29kZTsKICAgICAgICB2YXIgcmVzdWx0OwogICAgICAgIHRyeSB7CiAgICAgICAgICAgIHJlc3VsdCA9IGV2YWwoICcidXNlIHN0cmljdCI7XG4nK2NvZGUgKTsKICAgICAgICB9CiAgICAgICAgY2F0Y2goZSkgewogICAgICAgICAgICBwb3N0TWVzc2FnZSggZS50b1N0cmluZygpICk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgcmVzdWx0ID0gb2JqVG9SZXN1bHQoIHJlc3VsdCApOwogICAgICAgIGlmKCBjdmFsdWVzICYmIGN2YWx1ZXMubGVuZ3RoICkgewogICAgICAgICAgICByZXN1bHQgPSByZXN1bHQgKyBjdmFsdWVzLm1hcCggZnVuY3Rpb24oIHZhbHVlLCBpbmRleCApIHsKICAgICAgICAgICAgICAgIHJldHVybiAiQ29uc29sZSBsb2cgIisoaW5kZXgrMSkrIjoiICsgb2JqVG9SZXN1bHQodmFsdWUpOwogICAgICAgICAgICB9KS5qb2luKCIgIik7CiAgICAgICAgfQogICAgICAgIHBvc3RNZXNzYWdlKCByZXN1bHQgKTsKICAgIH07Cgp9KSgpOwoKCg==');

var BlobBuilder = window.WebKitBlobBuilder,
    blobBuilder = new BlobBuilder(),
    URL = window.webkitURL,
    blob, workerURL;

blobBuilder.append(workerCode);
blob = blobBuilder.getBlob("text/javascript");
workerURL = URL.createObjectURL( blob );

function makeWorkerExecuteSomeCode( code, callback ) {
    var timeout;

    code = code + "";
    var worker = new Worker( workerURL );

    worker.addEventListener( "message", function(event) {
        clearTimeout(timeout);
        callback( event.data );
        worker.terminate();
    });

    worker.postMessage({
        code: code
    });

    timeout = window.setTimeout( function() {
        callback( "Maximum execution time exceeded" );
        worker.terminate();
    }, 1000 );
}

bot.listen(
    /^\>(.+)$/,
    function ( msg ) {
        var maxLen = 1024;

        makeWorkerExecuteSomeCode( msg.matches[1], finish );

        function finish ( answer ) {
            if ( answer.length > maxLen ) {
                answer = '(snipped)' + answer.slice( 0, maxLen );
            }

            msg.directreply( answer );
        }
    }
);

}());
